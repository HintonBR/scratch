Schemes:
   person(X)
   female(X)
   male(X)
   parent(X,Y)

Facts:
   person('Mary').
   person('Pam').
   person('Susan').
   person('Carol').
   person('Julie').
   person('John').
   person('Zed').
   person('William').
   person('Brian'). 
   person('Karl').
   person('Jeff').
   person('Adam').

   female('Mary').
   female('Pam').
   female('Susan').
   female('Carol').
   female('Julie').
   male('John').
   male('Zed').
   male('William').
   male('Brian').
   male('Karl').
   male('Jeff').
   male('Adam').

   parent('John', 'Karl').
   parent('Mary', 'Karl').
   parent('John', 'Jeff').
   parent('Mary', 'Jeff').
   parent('John', 'Adam').
   parent('Mary', 'Adam').
   parent('John', 'Susan').
   parent('Mary', 'Susan').

   parent('Zed', 'John').
   parent('Pam', 'John').
   parent('William', 'Zed').
   parent('Carol', 'Zed').
   parent('Brian', 'William').
   parent('Julie', 'William').
   
Rules:
   grandparent(X,Y) :- parent(X,Z), parent(Z,Y).
   ancestor(X,Y)    :- parent(X,Y).
   ancestor(X,Y)    :- parent(X,Z), ancestor(Z,Y).
   descendant(X,Y)  :- parent(Y,X).
   descendant(X,Y)  :- descendant(X,Z), parent(Y,Z).

Queries:
   grandparent('John',Y)?
	 ancestor(Y, 'Jeff')?
	 descendant(D, 'Zed')?
   parent(X,Y)?
