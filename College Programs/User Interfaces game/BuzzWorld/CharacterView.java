/*
 * CharacterView.java
 *
 * Created on February 3, 2001, 1:05 PM
 */


/**
 *
 * @author  Bryan
 * @version 
 */
import java.awt.*;
import java.beans.*;
import javax.swing.*;
import java.io.*;
public class CharacterView extends javax.swing.JFrame {

    private CharacterModel cm;
    private String searchDirectory;
    private PropertyChangeListener pcl;
    /** Creates new form CharacterView */
    public CharacterView(CharacterModel cmodel, String search) {
        cm= cmodel;
        initComponents ();
        updateFields();
        addMyListeners();
        jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        searchDirectory = search;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtStrength = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        txtImageFile = new javax.swing.JTextField();
        cmdBrowse = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        cmdClose = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlImage = new ImagePanel();
        getContentPane().setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        }
        );
        
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, 1));
        jPanel1.setBorder(new javax.swing.border.TitledBorder(
        new javax.swing.border.EtchedBorder(), "Edit View", 4, 2,
        new java.awt.Font ("Garamond", 1, 12)));
        
        jPanel3.setLayout(new java.awt.GridBagLayout());
          java.awt.GridBagConstraints gridBagConstraints2;
          
          jLabel4.setText("Character Name");
            jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jLabel4.setRequestFocusEnabled(false);
            jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
            gridBagConstraints2 = new java.awt.GridBagConstraints();
            gridBagConstraints2.gridwidth = -1;
            gridBagConstraints2.gridheight = -1;
            gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints2.weightx = 1.0;
            gridBagConstraints2.weighty = 1.0;
            jPanel3.add(jLabel4, gridBagConstraints2);
            
            
          txtName.setToolTipText("Enter the character's name");
            txtName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            txtName.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    txtNameFocusLost(evt);
                }
            }
            );
            txtName.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    txtNameKeyPressed(evt);
                }
            }
            );
            gridBagConstraints2 = new java.awt.GridBagConstraints();
            gridBagConstraints2.gridwidth = -1;
            gridBagConstraints2.gridheight = -1;
            gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints2.insets = new java.awt.Insets(0, 23, 0, 0);
            gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints2.weightx = 80.0;
            gridBagConstraints2.weighty = 1.0;
            jPanel3.add(txtName, gridBagConstraints2);
            
            jPanel1.add(jPanel3);
          
          
        jPanel4.setLayout(new java.awt.GridBagLayout());
          java.awt.GridBagConstraints gridBagConstraints3;
          
          jLabel5.setText("Character Strength");
            jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jLabel5.setRequestFocusEnabled(false);
            jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
            gridBagConstraints3 = new java.awt.GridBagConstraints();
            gridBagConstraints3.gridwidth = -1;
            gridBagConstraints3.gridheight = -1;
            gridBagConstraints3.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints3.weightx = 1.0;
            gridBagConstraints3.weighty = 1.0;
            jPanel4.add(jLabel5, gridBagConstraints3);
            
            
          txtStrength.setToolTipText("Enter the character's strength");
            txtStrength.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    txtStrengthFocusLost(evt);
                }
            }
            );
            txtStrength.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    txtStrengthKeyPressed(evt);
                }
            }
            );
            gridBagConstraints3 = new java.awt.GridBagConstraints();
            gridBagConstraints3.gridwidth = -1;
            gridBagConstraints3.gridheight = -1;
            gridBagConstraints3.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints3.insets = new java.awt.Insets(0, 8, 0, 0);
            gridBagConstraints3.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints3.weightx = 80.0;
            gridBagConstraints3.weighty = 1.0;
            jPanel4.add(txtStrength, gridBagConstraints3);
            
            jPanel1.add(jPanel4);
          
          
        jPanel5.setLayout(new java.awt.GridBagLayout());
          java.awt.GridBagConstraints gridBagConstraints4;
          
          jLabel6.setText("Character Image File");
            gridBagConstraints4 = new java.awt.GridBagConstraints();
            gridBagConstraints4.gridwidth = -1;
            gridBagConstraints4.gridheight = -1;
            gridBagConstraints4.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints4.weightx = 1.0;
            gridBagConstraints4.weighty = 1.0;
            jPanel5.add(jLabel6, gridBagConstraints4);
            
            
          jPanel6.setLayout(new java.awt.GridBagLayout());
            java.awt.GridBagConstraints gridBagConstraints5;
            
            txtImageFile.setToolTipText("Enter the character's image file");
              txtImageFile.addFocusListener(new java.awt.event.FocusAdapter() {
                  public void focusLost(java.awt.event.FocusEvent evt) {
                      txtImageFileFocusLost(evt);
                  }
              }
              );
              txtImageFile.addKeyListener(new java.awt.event.KeyAdapter() {
                  public void keyPressed(java.awt.event.KeyEvent evt) {
                      txtImageFileKeyPressed(evt);
                  }
              }
              );
              gridBagConstraints5 = new java.awt.GridBagConstraints();
              gridBagConstraints5.gridwidth = -1;
              gridBagConstraints5.gridheight = -1;
              gridBagConstraints5.fill = java.awt.GridBagConstraints.HORIZONTAL;
              gridBagConstraints5.insets = new java.awt.Insets(0, 2, 0, 0);
              gridBagConstraints5.anchor = java.awt.GridBagConstraints.WEST;
              gridBagConstraints5.weightx = 80.0;
              gridBagConstraints5.weighty = 1.0;
              jPanel6.add(txtImageFile, gridBagConstraints5);
              
              
            cmdBrowse.setText("Browse");
              cmdBrowse.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      cmdBrowseActionPerformed(evt);
                  }
              }
              );
              cmdBrowse.addKeyListener(new java.awt.event.KeyAdapter() {
                  public void keyPressed(java.awt.event.KeyEvent evt) {
                      cmdBrowseKeyPressed(evt);
                  }
              }
              );
              gridBagConstraints5 = new java.awt.GridBagConstraints();
              jPanel6.add(cmdBrowse, gridBagConstraints5);
              
              gridBagConstraints4 = new java.awt.GridBagConstraints();
            gridBagConstraints4.gridwidth = -1;
            gridBagConstraints4.gridheight = -1;
            gridBagConstraints4.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints4.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints4.weightx = 85.0;
            gridBagConstraints4.weighty = 1.0;
            jPanel5.add(jPanel6, gridBagConstraints4);
            
            jPanel1.add(jPanel5);
          
          
        
          cmdClose.setText("Close");
            cmdClose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmdCloseActionPerformed(evt);
                }
            }
            );
            cmdClose.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    cmdCloseKeyPressed(evt);
                }
            }
            );
            jPanel7.add(cmdClose);
            
            jPanel1.add(jPanel7);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 0;
        gridBagConstraints1.gridy = 0;
        gridBagConstraints1.gridwidth = -1;
        gridBagConstraints1.gridheight = -1;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.ipady = 50;
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints1.weightx = 2.0;
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints1);
        
        
        jPanel2.setLayout(new java.awt.GridLayout(1, 1));
        jPanel2.setBorder(new javax.swing.border.TitledBorder(
        new javax.swing.border.EtchedBorder(), "Image View", 4, 2,
        new java.awt.Font ("Garamond", 1, 12)));
        
        jScrollPane1.setBackground(java.awt.Color.white);
          jScrollPane1.setOpaque(false);
          
          pnlImage.setLayout(new java.awt.FlowLayout());
            pnlImage.setBackground(java.awt.Color.white);
            pnlImage.setOpaque(false);
            jScrollPane1.setViewportView(pnlImage);
            
            jPanel2.add(jScrollPane1);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridx = 1;
        gridBagConstraints1.gridy = 0;
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.gridheight = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints1);
        
        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setSize(new java.awt.Dimension(750, 200));
        setLocation((screenSize.width-750)/2,(screenSize.height-200)/2);
    }//GEN-END:initComponents

  private void cmdBrowseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdBrowseKeyPressed
      if (evt.getKeyCode() == evt.VK_ENTER) ImageFileBrowse();
  }//GEN-LAST:event_cmdBrowseKeyPressed

  private void txtImageFileFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtImageFileFocusLost
    saveModel();
  }//GEN-LAST:event_txtImageFileFocusLost

  private void txtImageFileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImageFileKeyPressed
    if (evt.getKeyCode() == evt.VK_ENTER) saveModel();
  }//GEN-LAST:event_txtImageFileKeyPressed

  private void txtStrengthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStrengthFocusLost
    saveModel();
  }//GEN-LAST:event_txtStrengthFocusLost

  private void txtStrengthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStrengthKeyPressed
    if (evt.getKeyCode() == evt.VK_ENTER) saveModel();
  }//GEN-LAST:event_txtStrengthKeyPressed

  private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
    if (evt.getKeyCode() == evt.VK_ENTER) saveModel();
  }//GEN-LAST:event_txtNameKeyPressed

  private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
    saveModel();
  }//GEN-LAST:event_txtNameFocusLost

  private void cmdCloseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdCloseKeyPressed
    removeMyListeners();
    this.dispose();
  }//GEN-LAST:event_cmdCloseKeyPressed

  private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCloseActionPerformed
    removeMyListeners();
    this.dispose();
  }//GEN-LAST:event_cmdCloseActionPerformed
  private void saveModel() {
        if (txtName.getText().equals(cm.getName()) == false) {
        cm.setName(txtName.getText());
      }
      if (txtStrength.getText().equals(String.valueOf(cm.getStrength())) == false) {
          try {
            cm.setStrength((new Integer(txtStrength.getText())).intValue());
          }
          catch (NumberFormatException ne) {
            JOptionPane.showMessageDialog(null, "Invalid Strength value", "Invalid Number", JOptionPane.ERROR_MESSAGE); 
          }
      }
      if (txtImageFile.getText().equals(cm.getImageFilename()) == false) {
        cm.setImage(txtImageFile.getText());
      }
  }
  private void ImageFileBrowse() {
    File file;
    String name;
    String[] extensions = new String[3];
    extensions[0] = "JPG";
    extensions[1] = "GIF";
    extensions[2] = "BMP";
    JFileChooser selectFile = new JFileChooser();
    selectFile.setFileFilter(new StandardFileFilter(extensions, "Character Image Files"));
    selectFile.setCurrentDirectory(new File(searchDirectory));
    selectFile.showDialog(this, "Select File");
    file = selectFile.getSelectedFile();
    if (file != null) {
        txtImageFile.setText(file.getAbsolutePath());
        saveModel();
    }
  }
  private void cmdBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseActionPerformed
    ImageFileBrowse();
  }//GEN-LAST:event_cmdBrowseActionPerformed
 
  public void paint(Graphics g) {
    Image temp;
    super.paint(g);
    this.setTitle("Character View for " + cm.getName());
    updateFields();
    pnlImage.setFilename(txtImageFile.getText());
  }
  private void updateFields() {
      if (cm != null) {  
        txtName.setText(cm.getName());
        txtStrength.setText(String.valueOf(cm.getStrength()));
        txtImageFile.setText(cm.getImageFilename()); 
      }
  }
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        removeMyListeners();
        this.dispose();
        //System.exit(0);
    }//GEN-LAST:event_exitForm

     private void addMyListeners() {
        cm.addPropertyChangeListener(pcl = new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                modelChanged(evt);
            }
        });
    }
    private void modelChanged(java.beans.PropertyChangeEvent evt) {
        repaint();
    }
    private void removeMyListeners() {
        cm.removePropertyChangeListener(pcl);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtName;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtStrength;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField txtImageFile;
    private javax.swing.JButton cmdBrowse;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JButton cmdClose;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private ImagePanel pnlImage;
    // End of variables declaration//GEN-END:variables

}
