/*
 * SpaceView.java
 *
 * Created on February 3, 2001, 1:04 PM
 */

import java.awt.dnd.*;
import java.awt.datatransfer.*;
import java.beans.*;
import java.awt.*;
import java.io.*;
import javax.swing.*;
import java.util.*;
/**
 *
 * @author  Bryan
 * @version
 */
public class SpaceView extends javax.swing.JFrame implements DropTargetListener {
    
    private SpaceModel sm;
    private PropertyChangeListener pcl;
    private PropertyChangeListener pcl2;
    private GameModel gm;
    private Vector spaces;
    private Vector portals;
    /** Creates new form SpaceView */
    public SpaceView(SpaceModel smodel, GameModel game) {
        initComponents ();
        sm= smodel;
        gm = game;
        portals = new Vector();
        if (gm != null) spaces = game.getSpaceList();
        addMyListeners();
        updateFields();
        jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        new DropTarget(pnlImage, DnDConstants.ACTION_COPY_OR_MOVE, this);
        dragList1.setListData(spaces);
        pnlImage.setFilename(sm.getImageFilename());
        addPortals();
    }
      
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtImageFile = new javax.swing.JTextField();
        cmdBrowse = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        cmdClose = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dragList1 = new DragList();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlImage = new ImagePanel();
        getContentPane().setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        }
        );
        
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, 1));
        jPanel1.setBorder(new javax.swing.border.TitledBorder(
        new javax.swing.border.EtchedBorder(), "Edit View", 4, 2,
        new java.awt.Font ("Garamond", 1, 12)));
        
        jPanel2.setLayout(new java.awt.GridBagLayout());
          java.awt.GridBagConstraints gridBagConstraints2;
          
          jLabel1.setText("Space Name");
            jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            jLabel1.setRequestFocusEnabled(false);
            jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
            gridBagConstraints2 = new java.awt.GridBagConstraints();
            gridBagConstraints2.gridwidth = -1;
            gridBagConstraints2.gridheight = -1;
            gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints2.weightx = 1.0;
            gridBagConstraints2.weighty = 1.0;
            jPanel2.add(jLabel1, gridBagConstraints2);
            
            
          txtName.setToolTipText("Enter the character's name");
            txtName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            txtName.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    txtNameFocusLost(evt);
                }
            }
            );
            txtName.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    txtNameKeyPressed(evt);
                }
            }
            );
            gridBagConstraints2 = new java.awt.GridBagConstraints();
            gridBagConstraints2.gridwidth = -1;
            gridBagConstraints2.gridheight = -1;
            gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints2.insets = new java.awt.Insets(0, 20, 0, 0);
            gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints2.weightx = 80.0;
            gridBagConstraints2.weighty = 1.0;
            jPanel2.add(txtName, gridBagConstraints2);
            
            jPanel1.add(jPanel2);
          
          
        jPanel4.setLayout(new java.awt.GridBagLayout());
          java.awt.GridBagConstraints gridBagConstraints3;
          
          jLabel3.setText("Space Image File");
            gridBagConstraints3 = new java.awt.GridBagConstraints();
            gridBagConstraints3.gridwidth = -1;
            gridBagConstraints3.gridheight = -1;
            gridBagConstraints3.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints3.weightx = 1.0;
            gridBagConstraints3.weighty = 1.0;
            jPanel4.add(jLabel3, gridBagConstraints3);
            
            
          jPanel5.setLayout(new java.awt.GridBagLayout());
            java.awt.GridBagConstraints gridBagConstraints4;
            
            txtImageFile.setToolTipText("Enter the character's image file");
              txtImageFile.addFocusListener(new java.awt.event.FocusAdapter() {
                  public void focusLost(java.awt.event.FocusEvent evt) {
                      txtImageFileFocusLost(evt);
                  }
              }
              );
              txtImageFile.addKeyListener(new java.awt.event.KeyAdapter() {
                  public void keyPressed(java.awt.event.KeyEvent evt) {
                      txtImageFileKeyPressed(evt);
                  }
              }
              );
              gridBagConstraints4 = new java.awt.GridBagConstraints();
              gridBagConstraints4.gridwidth = -1;
              gridBagConstraints4.gridheight = -1;
              gridBagConstraints4.fill = java.awt.GridBagConstraints.HORIZONTAL;
              gridBagConstraints4.insets = new java.awt.Insets(0, 2, 0, 0);
              gridBagConstraints4.anchor = java.awt.GridBagConstraints.WEST;
              gridBagConstraints4.weightx = 80.0;
              gridBagConstraints4.weighty = 1.0;
              jPanel5.add(txtImageFile, gridBagConstraints4);
              
              
            cmdBrowse.setBorder(new javax.swing.border.SoftBevelBorder(0));
              cmdBrowse.setText("Browse");
              cmdBrowse.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                      cmdBrowseActionPerformed(evt);
                  }
              }
              );
              cmdBrowse.addKeyListener(new java.awt.event.KeyAdapter() {
                  public void keyPressed(java.awt.event.KeyEvent evt) {
                      cmdBrowseKeyPressed(evt);
                  }
              }
              );
              gridBagConstraints4 = new java.awt.GridBagConstraints();
              jPanel5.add(cmdBrowse, gridBagConstraints4);
              
              gridBagConstraints3 = new java.awt.GridBagConstraints();
            gridBagConstraints3.gridwidth = -1;
            gridBagConstraints3.gridheight = -1;
            gridBagConstraints3.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints3.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints3.weightx = 85.0;
            gridBagConstraints3.weighty = 1.0;
            jPanel4.add(jPanel5, gridBagConstraints3);
            
            jPanel1.add(jPanel4);
          
          
        
          cmdClose.setBorder(new javax.swing.border.SoftBevelBorder(0));
            cmdClose.setText("Close");
            cmdClose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cmdCloseActionPerformed(evt);
                }
            }
            );
            cmdClose.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    cmdCloseKeyPressed(evt);
                }
            }
            );
            jPanel6.add(cmdClose);
            
            jPanel1.add(jPanel6);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.gridheight = -1;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints1);
        
        
        jPanel8.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints5;
        
        jPanel9.setLayout(new java.awt.GridLayout(1, 1));
          jPanel9.setBorder(new javax.swing.border.TitledBorder("Space View"));
          
          
            dragList1.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black));
              jScrollPane2.setViewportView(dragList1);
              
              jPanel9.add(jScrollPane2);
            
            gridBagConstraints5 = new java.awt.GridBagConstraints();
          gridBagConstraints5.gridwidth = -1;
          gridBagConstraints5.gridheight = -1;
          gridBagConstraints5.fill = java.awt.GridBagConstraints.BOTH;
          gridBagConstraints5.anchor = java.awt.GridBagConstraints.WEST;
          gridBagConstraints5.weightx = 1.0;
          gridBagConstraints5.weighty = 1.0;
          jPanel8.add(jPanel9, gridBagConstraints5);
          
          
        jPanel10.setLayout(new java.awt.GridLayout(1, 1));
          jPanel10.setBorder(new javax.swing.border.TitledBorder("Image View"));
          
          jScrollPane1.setDoubleBuffered(true);
            jScrollPane1.setAutoscrolls(true);
            
            pnlImage.setLayout(null);
              pnlImage.setBorder(new javax.swing.border.LineBorder(java.awt.Color.black));
              pnlImage.setBackground(java.awt.Color.white);
              pnlImage.setAutoscrolls(true);
              jScrollPane1.setViewportView(pnlImage);
              
              jPanel10.add(jScrollPane1);
            
            gridBagConstraints5 = new java.awt.GridBagConstraints();
          gridBagConstraints5.gridwidth = 0;
          gridBagConstraints5.gridheight = 0;
          gridBagConstraints5.fill = java.awt.GridBagConstraints.BOTH;
          gridBagConstraints5.anchor = java.awt.GridBagConstraints.EAST;
          gridBagConstraints5.weightx = 5.0;
          gridBagConstraints5.weighty = 1.0;
          jPanel8.add(jPanel10, gridBagConstraints5);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.gridheight = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 80.0;
        getContentPane().add(jPanel8, gridBagConstraints1);
        
        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setSize(new java.awt.Dimension(750, 550));
        setLocation((screenSize.width-750)/2,(screenSize.height-550)/2);
    }//GEN-END:initComponents

  private void cmdBrowseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdBrowseKeyPressed
    if (evt.getKeyCode() == evt.VK_ENTER) ImageFileBrowse();
  }//GEN-LAST:event_cmdBrowseKeyPressed
    
  private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
      saveModel();
  }//GEN-LAST:event_txtNameFocusLost
  
  private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
      if (evt.getKeyCode() == evt.VK_ENTER) saveModel();
  }//GEN-LAST:event_txtNameKeyPressed
  
  private void txtImageFileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImageFileKeyPressed
      if (evt.getKeyCode() == evt.VK_ENTER) saveModel();
  }//GEN-LAST:event_txtImageFileKeyPressed
  
  private void txtImageFileFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtImageFileFocusLost
      saveModel();
  }//GEN-LAST:event_txtImageFileFocusLost
  
  private void cmdCloseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdCloseKeyPressed
      removeMyListeners();
      this.dispose();
  }//GEN-LAST:event_cmdCloseKeyPressed
  
  private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCloseActionPerformed
      removeMyListeners();
      this.dispose();
  }//GEN-LAST:event_cmdCloseActionPerformed
  
  private void saveModel() {
      if (txtName.getText().equals(sm.getName()) == false) {
          sm.setName(txtName.getText());
      }
      if (txtImageFile.getText().equals(sm.getImageFilename()) == false) {
          sm.setImageFilename(txtImageFile.getText());
      }
  }
  
  public void paint(Graphics g) {
      Image temp;
      super.paint(g);
      this.setTitle("Space View for " + sm.getName());
      updateFields();
      if (pnlImage.getFilename().equals(txtImageFile.getText())== false) {
          pnlImage.setFilename(txtImageFile.getText());
          addPortals();
          jScrollPane1.repaint();
          jScrollPane1.validate();
      }
      
  }
  private void addPortals() {
      Iterator it;
      PortalComponent pc;
      if (pnlImage.getFilename().equals("") == false) {
       pc = new PortalComponent(sm.getEntry());
       portals.add(pc);
        pnlImage.add(pc);
        if (sm.getPortalList().isEmpty() == false) {
            it = sm.getPortalList().iterator();
            while (it.hasNext()) {
                pc = new PortalComponent((Portal) it.next());
                portals.add(pc);
                pnlImage.add(pc);
            }
        }
        repaint();
      }
   }
  private void updateFields() {
      if (sm != null) {
          txtName.setText(sm.getName());
          txtImageFile.setText(sm.getImageFilename());
      }
  }
  private void addMyListeners() {
      sm.addPropertyChangeListener(pcl = new java.beans.PropertyChangeListener() {
          public void propertyChange(java.beans.PropertyChangeEvent evt) {
              modelChanged(evt);
          }
      });
      if (gm != null) {
          gm.addPropertyChangeListener(pcl2 = new java.beans.PropertyChangeListener() {
              public void propertyChange(java.beans.PropertyChangeEvent evt) {
                  modelChanged(evt);
              }
          });
      }
  }
  private void modelChanged(java.beans.PropertyChangeEvent evt) {
      int i;
      if (evt.getPropertyName().equals(GameModel.SPACELIST)) {
          spaces = gm.getSpaceList();
          dragList1.setListData(spaces);
      }
      else if (evt.getPropertyName().equals(SpaceModel.SPACE_ADDED_PORTAL)) {
           PortalComponent pc = new PortalComponent((Portal) evt.getNewValue());
           portals.add(pc);
           pnlImage.add(pc);
      }
      else if (evt.getPropertyName().equals(SpaceModel.SPACE_DELETED_PORTAL)) {
          PortalComponent pc;
          Portal p;
          if (portals.isEmpty() == false) {
            Iterator it = portals.iterator();
            while (it.hasNext()) {
                pc = (PortalComponent) it.next();
                if (evt.getSource() instanceof SpaceModel) p = (Portal) evt.getNewValue();
                else p = (Portal) evt.getSource();
                if (pc.getPortalModel() == p) {
                    portals.remove(pc);
                    pnlImage.remove(pc);
                    break;
                }
            }
          }
      }
      repaint();
  }
  private void removeMyListeners() {
      sm.removePropertyChangeListener(pcl);
      if (gm != null) gm.removePropertyChangeListener(pcl2);
  }
  private void ImageFileBrowse() {
       File file;
      String name;
      String[] extensions = new String[3];
      extensions[0] = "JPG";
      extensions[1] = "GIF";
      extensions[2] = "BMP";
      JFileChooser selectFile = new JFileChooser();
      selectFile.setFileFilter(new StandardFileFilter(extensions, "Space Image Files"));
      selectFile.setCurrentDirectory(new File(gm.getDirectory()));
      selectFile.showDialog(this, "Select File");
      file = selectFile.getSelectedFile();
      if (file != null) {
          txtImageFile.setText(file.getAbsolutePath());
          saveModel();
      }
  }
  private void cmdBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseActionPerformed
    ImageFileBrowse();
  }//GEN-LAST:event_cmdBrowseActionPerformed
  
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        removeMyListeners();
        this.dispose();
    }//GEN-LAST:event_exitForm
    
   //Drop interface stubs
    public void dragOver(java.awt.dnd.DropTargetDragEvent p1) { }
    public void dropActionChanged(java.awt.dnd.DropTargetDragEvent p1) {}
    public void dragEnter(java.awt.dnd.DropTargetDragEvent p1) {}
    public void dragExit(java.awt.dnd.DropTargetEvent p1) {}
    public void drop(DropTargetDropEvent e) {
        Portal p;
        int pnlImageX, pnlImageY;
        
        try {
            p = new Portal(new Dimension(100, 100), e.getLocation(),(SpaceModel) dragList1.getModel().getElementAt(Integer.parseInt((String)e.getTransferable().getTransferData(DataFlavor.stringFlavor))));
            sm.addPortal(p);
            e.acceptDrop(DnDConstants.ACTION_COPY_OR_MOVE);
            e.dropComplete(true);
        }
        catch(Exception ue) {
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtName;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField txtImageFile;
    private javax.swing.JButton cmdBrowse;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton cmdClose;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private DragList dragList1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private ImagePanel pnlImage;
    // End of variables declaration//GEN-END:variables
 
}
